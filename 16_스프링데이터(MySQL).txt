스프링 데이터 2부 : MySQL 설정하기

DBCP는 application  성능에 아주 핵심적인 역활을 하므로, dbcp에 버그가 있으면
application에 아주 심각한 문제가 따라올 수 있다. 


지원하는 DBCP
1. HikariCP (기본)
 	- https://github.com/brettwooldridge/HikaraiCP#frequentyl-used
2. Tomcat CP
3. Commons DBCP2


DBCP 설정
- spring.datasource.hikari.*
- spring.datasource.tomcat.*
- spring.datasource.dbcp2.*


MySQL 커넥터 의존성 추가.
<dependency>
	<groupId>mysql</groupId>
	<artifactId>mysql-connector-java</artifactId>
</dependency>



MySQL 추가 (도커 사용)
- docker run -p 3306:3306 --name mysql_boot -e MYSQL_ROOT_PASSWORD=1-e
   MYSQL_DATABASE=springboot-e MYSQL_USER=keesun -e
   MYSQL_PASSWORD=pass -d mysql

- docker exec -i t mysql_boot bash
- mysql -u root -p


MYSQL용 Datasource 설정
- spring.datasource.url=jdbc:mysql://localhost:3306/springboot?useSSL=false
- spring.datasource.username=keesun
- spring.datasource.password=pass
- 운영 DB용 설정
	-- spring.datasource.testWhileldel=true
	-- spring.datasource.validationQuery=SELECT 1 

──────────────────────────────────────────
spring.datasource.hikari.maximum-pool-size=4


spring.datasource.url=jdbc:mysql://localhost:3306/springboot?useSSL=false
spring.datasource.username=keesun
spring.datasource.password=pass


Docker은 container 솔루션이다.




──────────────────────────────────────────
MySQL보다 PostGreSQL이 더 안전하다.


