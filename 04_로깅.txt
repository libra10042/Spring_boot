로킹

(스프링 부트는 기본적으로 Commons Logging을 사용한다.) 결국에는 SLF4J를 사용한다.

로깅 퍼사드 vs 로거
  - Commons Logging, SLF4j      - -> 실제 로깅을 하는 애들이 아니고 로거 API들을 추상화해논 인터페이스 들이다.
 - JUL, Log4js, Logback
 


로깅 퍼사드의 장점. 
- 로깅 퍼사드 하위의 JUL, Log4js, Logback 을 바꿔서 낄 수 있다.




스피링 5에 로거 관련 변경 사항
- Spring-JCL
      -- Commons Logging -> SJL4j or Log4j2
      -- pom.xml 에 exclusion 안해도 됨. 


스프링 부트 로깅
- 기본 포맷
- --debug(일부 핵심 라이브러리만 디버깅 모드로)
- --trace ( 전부 다 디버깅 모드로)
- 컬러 출력 : spring.output.ansi.enabled
- 파일 출력 : loggin.file 또는 logging.path
- 로그 레벨 조정 : logging.level.패키지 = 로그 레벨. 

─────────────────────────────────────────
로깅2부

Logback이란?
: 자바 오픈소스 로깅 프레임워크, SLF4J의 구현체
: 스프링 부트의 기본으로 설정되어 있어서 사용시 별도로 라이브러리를 추가하지 않아도 된다.


커스텀 로그 설정 파일 사용하기
 - Logback : logback-spring.xml
 - Log4J2 : log4j2-spring.xml
 - JUL(비추) 
 - Logback extention
 	-- 프로파일 <springProfile name="프로파일">
 	-- Enviroment 프로퍼티 <springProperty>


로거를 Log4j2로 변경하기




-------------------------
logback-spring.xml 사용하는 것을 추천. !!

<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<include resource="org/springframework/boot/loggin/logback/base.xml"/>
	<logger name="me.whiteship" level="DEBUG" />
</configuration>
				logback-spring.xml	


keesun.name = Keesun
keesun.age = 100
keesun.full-name= = ${keesun.name} Baik
keesun.session-timeout=25s
spring.profiles.active=test
spring.output.ansi.enabled=always
loggin.path = logs
logging.level.me.whiteship = debug
				application.properties
				












